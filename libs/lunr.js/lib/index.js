/*!
 * lunr.Index
 * Copyright (C) @YEAR Oliver Nightingale
 */
lunr.Index=function(e){this.invertedIndex=e.invertedIndex,this.fieldVectors=e.fieldVectors,this.tokenSet=e.tokenSet,this.fields=e.fields,this.pipeline=e.pipeline},lunr.Index.prototype.search=function(e){return this.query(function(n){new lunr.QueryParser(e,n).parse()})},lunr.Index.prototype.query=function(e){for(var n=new lunr.Query(this.fields),r=Object.create(null),t=Object.create(null),i=Object.create(null),l=Object.create(null),s=Object.create(null),o=0;o<this.fields.length;o++)t[this.fields[o]]=new lunr.Vector;e.call(n,n);for(o=0;o<n.clauses.length;o++){var u=n.clauses[o],d=null,f=lunr.Set.complete;d=u.usePipeline?this.pipeline.runString(u.term,{fields:u.fields}):[u.term];for(var c=0;c<d.length;c++){var a=d[c];u.term=a;var h=lunr.TokenSet.fromClause(u),p=this.tokenSet.intersect(h).toArray();if(0===p.length&&u.presence===lunr.Query.presence.REQUIRED){for(var v=0;v<u.fields.length;v++){l[E=u.fields[v]]=lunr.Set.empty}break}for(var m=0;m<p.length;m++){var y=p[m],g=this.invertedIndex[y],I=g._index;for(v=0;v<u.fields.length;v++){var S=g[E=u.fields[v]],x=Object.keys(S),O=y+"/"+E,b=new lunr.Set(x);if(u.presence==lunr.Query.presence.REQUIRED&&(f=f.union(b),l[E]===undefined&&(l[E]=lunr.Set.complete)),u.presence!=lunr.Query.presence.PROHIBITED){if(t[E].upsert(I,u.boost,function(e,n){return e+n}),!i[O]){for(var j=0;j<x.length;j++){var k,w=x[j],V=new lunr.FieldRef(w,E),R=S[w];(k=r[V])===undefined?r[V]=new lunr.MatchData(y,E,R):k.add(y,E,R)}i[O]=!0}}else s[E]===undefined&&(s[E]=lunr.Set.empty),s[E]=s[E].union(b)}}}if(u.presence===lunr.Query.presence.REQUIRED)for(v=0;v<u.fields.length;v++){l[E=u.fields[v]]=l[E].intersect(f)}}var Q=lunr.Set.complete,D=lunr.Set.empty;for(o=0;o<this.fields.length;o++){var E;l[E=this.fields[o]]&&(Q=Q.intersect(l[E])),s[E]&&(D=D.union(s[E]))}var N=Object.keys(r),P=[],F=Object.create(null);if(n.isNegated()){N=Object.keys(this.fieldVectors);for(o=0;o<N.length;o++){V=N[o];var J=lunr.FieldRef.fromString(V);r[V]=new lunr.MatchData}}for(o=0;o<N.length;o++){var T=(J=lunr.FieldRef.fromString(N[o])).docRef;if(Q.contains(T)&&!D.contains(T)){var U,q=this.fieldVectors[J],B=t[J.fieldName].similarity(q);if((U=F[T])!==undefined)U.score+=B,U.matchData.combine(r[J]);else{var C={ref:T,score:B,matchData:r[J]};F[T]=C,P.push(C)}}}return P.sort(function(e,n){return n.score-e.score})},lunr.Index.prototype.toJSON=function(){var e=Object.keys(this.invertedIndex).sort().map(function(e){return[e,this.invertedIndex[e]]},this),n=Object.keys(this.fieldVectors).map(function(e){return[e,this.fieldVectors[e].toJSON()]},this);return{version:lunr.version,fields:this.fields,fieldVectors:n,invertedIndex:e,pipeline:this.pipeline.toJSON()}},lunr.Index.load=function(e){var n={},r={},t=e.fieldVectors,i=Object.create(null),l=e.invertedIndex,s=new lunr.TokenSet.Builder,o=lunr.Pipeline.load(e.pipeline);e.version!=lunr.version&&lunr.utils.warn("Version mismatch when loading serialised index. Current version of lunr '"+lunr.version+"' does not match serialized index '"+e.version+"'");for(var u=0;u<t.length;u++){var d=(c=t[u])[0],f=c[1];r[d]=new lunr.Vector(f)}for(u=0;u<l.length;u++){var c,a=(c=l[u])[0],h=c[1];s.insert(a),i[a]=h}return s.finish(),n.fields=e.fields,n.fieldVectors=r,n.invertedIndex=i,n.tokenSet=s.root,n.pipeline=o,new lunr.Index(n)};